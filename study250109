1. usermod
- 디렉터리 /home에 위치한 사용자들의 정보를 변경하는 명령어
usermod [옵션] 계정명

2. 명령어 userdel
- 기존 계정 정보 삭제하는 명령어
- 옵션없이 userdel 사용 시(즉, 계정 바로 삭제시) 디렉터리 /etc/passwd, /etc/shadow/, etc/group에서 해당 계정 정보가 삭제됨.
userdel [옵션] 계정명

//옵션 -r : 계정명의 /var/spool/mail의 메일 파일과 홈 디렉터리 내용 모두 삭제
홈 디렉터리가 삭제되면 그 계정과 관련된 파일, 설정, 데이터가 사라짐.
아래는 그 예시.
1. 개발자 계정 삭제
홈 디렉터리 안에 **소스 코드, 개발 환경 설정 파일 (.bashrc, .gitconfig 등)**이 들어 있어 있었고, 삭제 시 이 모든 게 모두 삭제됨.
결과:
복구하지 않으면 중요한 프로젝트 파일이 영구적으로 사라짐.
해당 계정을 다시 만들어도 원래의 작업 환경을 복구 불가.
2. 서버 관리자 계정 삭제
서버 관리자는 홈 디렉터리에 스크립트, 로그 파일, SSH 키 같은 걸 저장해 놓는 경우가 많음
홈 디렉터리 삭제 시:
중요한 자동화 스크립트가 사라져 서버 관리 업무에 지장이 생길 수 있음.
SSH 키가 사라지면 해당 계정으로 원격 접속이 불가능해짐.
3. 웹사이트 운영 계정 삭제
웹사이트 데이터를 해당 계정의 홈 디렉터리 아래 저장하는 경우, 홈 디렉터리 삭제 시:
업로드된 이미지, HTML 파일, 설정 파일 등이 날아감.
결과: 웹사이트가 정상 작동하지 않을 수 있음.
4. 일반 사용자 계정 삭제
일반 사용자는 홈 디렉터리에 문서, 사진, 음악, 개인 설정 등을 저장해 놓음.
홈 디렉터리 삭제 시:
개인 데이터(사진, 문서 등)가 전부 삭제돼 복구가 어려워짐.
사용자 설정(예: 데스크톱 배경, 프로그램 설정 등)이 초기화됨.
홈 디렉터리 삭제가 미치는 일반적 영향
파일 손실: 홈 디렉터리에 저장된 데이터는 영구적으로 삭제되며, 복구하려면 백업이 필요함.
작업 환경 초기화: 사용자별 설정 파일이 사라지므로, 해당 계정으로 만든 작업 환경은 복구되지 않음.
프로그램 오류: 특정 프로그램이 홈 디렉터리에 의존하는 파일(예: 설정 파일)을 못 찾으면 작동하지 않을 수 있음.
실수로 홈 디렉터리를 삭제했을 때?
백업 여부 확인: 홈 디렉터리를 삭제하기 전에 백업을 했는지 확인.
복구 툴 사용: extundelete 같은 복구 툴로 삭제된 데이터를 복구 시도.
재생성 가능성 확인: 설정 파일이나 데이터가 없어도 새로 생성할 수 있는지 확인.


3, change
- 패스워드 만료 정보를 변경하는 명령어
change [옵션] [계정명]
change -l snow
계정자 snow의 패스워드 정보 표시(사용자 계정정보 출력)
change -m 2 snow
계정자 snow의 최소 패스워드 사용일자는 2일(설정 암호 최소 사용일자)
change -M 30 snow
계정자 snow의 최대 패스워드 사용 일자는 30일(설정 암호 최대 사용일자)(
change -E 2025/3/1 snow
계정자 snow는 2025년 3월 1일에 패스워드 만기됨.(암호 만기일 지정)
E : expire 약자(만료)
change -W 10 snow
계정자 snow에 대해 만기 10일전 경고 메세지 출력
W : Warning(경고)
